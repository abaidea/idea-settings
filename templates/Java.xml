<templateSet group="Java">
  <template name="setn" value="$VAR$.setName(getName()+/*NlsIgnore*/&quot;_$VAR$&quot;);" description="setName" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="table" value="final $CLS$ $VAR$ = tableContainer.get$CLS$(OpenMode.READWRITE);" description="" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CLS" expression="groovyScript(&quot;_1.toUpperCase()&quot;, VAR)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="COMPLETION" value="true" />
      <option name="JAVA_DECLARATION" value="true" />
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="setup" value="@Before&#10;public void setUp() throws Exception {&#10;  final GlobalInterface globalInterface = getGlobalInterface();&#10;  final LohnHrmsTableContainer tableContainer = LohnHrmsTestHelper.createLohnHrmsTableContainerWithMemTables(globalInterface);&#10;  $END$    &#10;}" description="Setup for BasePureTestCase" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="gettable" value="private $CLS$ get$CLS$(){&#10;    if($VAR$ == null){&#10;        $VAR$ = LohnHrmsTableContainer.getLohnHrmsTableContainer(globalInterface).get$CLS$(OpenMode.READONLY);&#10;    }&#10;    return $VAR$;&#10;}" description="Get Table with lazy initialisation from tablecontainer" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CLS" expression="groovyScript(&quot;_1.toUpperCase()&quot;, VAR)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="emp" value="StringUtil.EMPTY" description="StringUtil.EMPTY" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="recb" value="try(final LohnHrmsDBRecnumBackup ignored = LohnHrmsDBRecnumBackup.create($VAR$)){&#10;  $END$&#10;}" description="RecnumBackup" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
      <option name="JAVA_COMMENT" value="false" />
      <option name="JAVA_DECLARATION" value="false" />
      <option name="JAVA_STRING" value="false" />
    </context>
  </template>
  <template name="nlsig" value="/*NlsIgnore*/" description="NlsIgnore" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="name" value="private static final String NAME = /*NlsIgnore*/&quot;$CLASS$&quot;;" description="" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS" expression="className()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="COMPLETION" value="false" />
      <option name="JAVA_CODE" value="true" />
      <option name="JAVA_COMMENT" value="false" />
      <option name="JAVA_EXPRESSION" value="false" />
      <option name="JAVA_STATEMENT" value="false" />
      <option name="JAVA_STRING" value="false" />
    </context>
  </template>
  <template name="logger" value="private static final Logger LOGGER = Logger.getLogger($CLASS$.class.getSimpleName());" description="Create Logger Instance" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS" expression="className()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="COMPLETION" value="false" />
      <option name="JAVA_CODE" value="true" />
      <option name="JAVA_COMMENT" value="false" />
      <option name="JAVA_EXPRESSION" value="false" />
      <option name="JAVA_STATEMENT" value="false" />
      <option name="JAVA_STRING" value="false" />
    </context>
  </template>
</templateSet>